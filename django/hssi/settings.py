"""
Django settings for project_name project.

Generated by 'django-admin startproject' using Django 3.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import os
import requests

# from .secret_settings import *

### The following section should be in a secret_settings.py file (imported above)
###
SECRET_KEY = 'abcdefg'

SUPERUSER_NAME = None if 'SUPERUSER_NAME' not in os.environ else os.environ.get('SUPERUSER_NAME')
SUPERUSER_PWD = None if 'SUPERUSER_PWD' not in os.environ else os.environ.get('SUPERUSER_PWD')

ADMIN_EMAIL = "admin@my-site.com"
DEFAULT_FROM_EMAIL = "noreply@hssi.hsdcloud.org"

# EMAIL_HOST = 'your.email.server'
# EMAIL_PORT = 25
EMAIL_SUBJECT_PREFIX = "[HSSI] "
###
### - end secret settings

# default for local development
SITE_DOMAIN = "hssi.hsdcloud.org"
SITE_PROTOCOL = "https"

EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_PORT = 465
EMAIL_USE_SSL = True
EMAIL_HOST_USER = os.environ.get("GMAIL_EMAIL")
EMAIL_HOST_PASSWORD = os.environ.get("GMAIL_APP_PASSWORD")
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

# uncomment the below 2 lines to see email contents in the console output
# to debug when an actual SMTP server is not available
#
# if SITE_DOMAIN == "lvh.me":
#     EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ["*"] if DEBUG else ["52.2.25.84", "hssi.hsdcloud.org"]


# Application definition

INSTALLED_APPS = [
	'django.contrib.admin',
	'django.contrib.auth',
	'django.contrib.contenttypes',
	'django.contrib.sessions',
	'django.contrib.messages',
	'django.contrib.staticfiles',
	'django_extensions',
	'markdownify.apps.MarkdownifyConfig',
	"sortedm2m",
]

MIDDLEWARE = [
	'django.middleware.security.SecurityMiddleware',
	'django.contrib.sessions.middleware.SessionMiddleware',
	'django.middleware.common.CommonMiddleware',
	'django.middleware.csrf.CsrfViewMiddleware',
	'django.contrib.auth.middleware.AuthenticationMiddleware',
	'django.contrib.messages.middleware.MessageMiddleware',
	'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'hssi.urls'

# used to remove template caching in debug mode
default_loaders = [
	"django.template.loaders.filesystem.Loader",
	"django.template.loaders.app_directories.Loader",
]
cached_loaders = [("django.template.loaders.cached.Loader", default_loaders)]

TEMPLATES = [
	{
		'BACKEND': 'django.template.backends.django.DjangoTemplates',
		'DIRS': [os.path.join(BASE_DIR, 'hssi', 'templates')],
		'OPTIONS': {
			'context_processors': [
				'django.contrib.auth.context_processors.auth',
				'django.contrib.messages.context_processors.messages',
				'django.template.context_processors.debug',
				'django.template.context_processors.request',
				'hssi.context_processors.export_vars',
			],
			"loaders": cached_loaders if not DEBUG else default_loaders,
			"debug": DEBUG,
		},
	},
]

TEMPLATES = [
	{
		'BACKEND': 'django.template.backends.django.DjangoTemplates',
		'DIRS': [os.path.join(BASE_DIR, 'hssi', 'templates')],
		'APP_DIRS': True,
		'OPTIONS': {
			'context_processors': [
				'django.contrib.auth.context_processors.auth',
				'django.contrib.messages.context_processors.messages',
				'django.template.context_processors.debug',
				'django.template.context_processors.request',
				'hssi.context_processors.export_vars',
			],
		},
	},
]

WSGI_APPLICATION = 'hssi.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
	'default' : {
		'ENGINE': 'django.db.backends.postgresql',
		'NAME': 'postgres', 
		'USER': 'postgres', 
		'PASSWORD': SUPERUSER_PWD,
		'HOST': 'website_db',
	}
}

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
	{
		'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
	},
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/New_York'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static/')

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')
MEDIA_URL = '/media/'

DATABASE_ROUTERS = []
DB_IMPORT_IN_PROGRESS = False

DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'

from website import app_settings

# Required in newer versions of django-crispy-forms
CRISPY_TEMPLATE_PACK = 'bootstrap4'
