# Generated by Django 5.1.5 on 2025-03-20 00:44

import colorful.fields
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('website', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Awards',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('identifier', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FunctionCategories',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('abbreviation', models.CharField(blank=True, max_length=5, null=True)),
                ('backgroundColor', colorful.fields.RGBColorField(blank=True, default='#FFFFFF', null=True, verbose_name='Background Color')),
                ('textColor', colorful.fields.RGBColorField(blank=True, default='#000000', null=True, verbose_name='Text Color')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('url', models.URLField(blank=True, null=True)),
                ('description', models.CharField(max_length=250)),
            ],
            options={
                'ordering': ['description'],
            },
        ),
        migrations.CreateModel(
            name='IvoaEntries',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.IntegerField(choices=[(1, 'Instrument'), (2, 'Observatory'), (3, 'Mission')], default=1)),
                ('name', models.CharField(max_length=100)),
                ('identifier', models.CharField(blank=True, max_length=200, null=True)),
                ('ivoaEntryId', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Keywords',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Licenses',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('identifier', models.CharField(blank=True, max_length=100, null=True)),
                ('full_text', models.TextField(blank=True, null=True)),
                ('scheme', models.CharField(blank=True, max_length=100, null=True)),
                ('scheme_url', models.URLField(blank=True, null=True)),
                ('url', models.URLField(blank=True, null=True)),
            ],
            options={
                'ordering': ['identifier', 'name'],
            },
        ),
        migrations.CreateModel(
            name='OperatingSystems',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PhenomenaTypes',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RepoStatuses',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Functionalities',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='functionalities', to='website.functioncategories')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Organizations',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('abbreviation', models.CharField(blank=True, max_length=20, null=True)),
                ('type', models.IntegerField(choices=[(1, 'University'), (2, 'Company'), (3, 'Non-Profit'), (4, 'Government Agency'), (6, 'Other')], default=6)),
                ('website', models.URLField(blank=True, null=True)),
                ('identifier', models.CharField(blank=True, max_length=200, null=True)),
                ('parent_organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_organizations', to='website.organizations')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FileFormats',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('extension', models.CharField(max_length=25)),
                ('fullName', models.CharField(blank=True, max_length=100, null=True)),
                ('affiliation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='file_formats', to='website.organizations')),
            ],
            options={
                'ordering': ['extension'],
            },
        ),
        migrations.CreateModel(
            name='Persons',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('lastName', models.CharField(blank=True, max_length=100, null=True)),
                ('identifier', models.CharField(blank=True, max_length=200, null=True)),
                ('affiliation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='persons', to='website.organizations')),
            ],
            options={
                'ordering': ['lastName', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ProgrammingLanguages',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('version', models.CharField(blank=True, max_length=50, null=True)),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='programming_languages', to='website.organizations')),
            ],
            options={
                'ordering': ['name', 'version'],
            },
        ),
        migrations.CreateModel(
            name='Softwares',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('publicationDate', models.DateField()),
                ('softwareName', models.CharField(max_length=150)),
                ('versionNumber', models.CharField(blank=True, max_length=25, null=True)),
                ('versionDate', models.DateField(blank=True, null=True)),
                ('versionDescription', models.TextField(blank=True, null=True)),
                ('versionPid', models.CharField(blank=True, max_length=200, null=True)),
                ('persistentIdentifier', models.CharField(blank=True, max_length=200, null=True)),
                ('referencePublication', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('conciseDescription', models.TextField(blank=True, max_length=200, null=True)),
                ('documentation', models.URLField(blank=True, null=True)),
                ('relatedPublications', models.TextField(blank=True, null=True)),
                ('relatedDatasets', models.TextField(blank=True, null=True)),
                ('relatedRegion', models.TextField(blank=True, null=True)),
                ('relatedSoftware', models.TextField(blank=True, null=True)),
                ('interopableSoftware', models.TextField(blank=True, null=True)),
                ('codeRepositoryUrl', models.URLField(blank=True, null=True)),
                ('authors', models.ManyToManyField(related_name='softwares', to='website.persons')),
                ('award', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='softwares', to='website.awards')),
                ('dataInputs', models.ManyToManyField(related_name='softwares_data', to='website.functionalities')),
                ('developmentStatus', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='softwares', to='website.repostatuses')),
                ('funder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='softwares_funder', to='website.organizations')),
                ('keywords', models.ManyToManyField(related_name='softwares', to='website.keywords')),
                ('license', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='softwares_license', to='website.licenses')),
                ('logo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='softwares', to='website.images')),
                ('metadataLicense', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='softwares', to='website.licenses')),
                ('operatingSystem', models.ManyToManyField(related_name='softwares', to='website.operatingsystems')),
                ('programmingLanguage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='softwares', to='website.programminglanguages')),
                ('publisher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='softwares', to='website.organizations')),
                ('relatedInstruments', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='softwares', to='website.ivoaentries')),
                ('relatedObservatories', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='observatories', to='website.ivoaentries')),
                ('relatedPhenomena', models.ManyToManyField(related_name='softwares', to='website.phenomenatypes')),
                ('softwareFunctionality', models.ManyToManyField(related_name='softwares', to='website.functionalities')),
                ('supportedFileFormats', models.ManyToManyField(related_name='softwares', to='website.fileformats')),
            ],
            options={
                'ordering': ['softwareName'],
            },
        ),
    ]
