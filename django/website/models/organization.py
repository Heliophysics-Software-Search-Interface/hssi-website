import uuid
from typing import Callable

from django.db import models

# we need to import programming languages for intellisense to resolve the 
# Organizations.programming_languages field's type
from typing import TYPE_CHECKING
if TYPE_CHECKING:
    from .software import ProgrammingLanguage

class OrganizationType(models.IntegerChoices):
    UNIVERSITY = 1, "University"
    COMPANY = 2, "Company"
    NON_PROFIT = 3, "Non-Profit"
    GOVERNMENT_AGENCY = 4, "Government Agency"
    OTHER = 6, "Other"

class Organization(models.Model):
    '''Database model for organization entries to be linked to metadata'''

    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)
    name = models.CharField(max_length=100)
    abbreviation = models.CharField(max_length=20, null=True, blank=True)
    type = models.IntegerField(choices=OrganizationType.choices, default=OrganizationType.OTHER)
    website = models.URLField(blank=True, null=True)
    identifier = models.CharField(max_length=200, blank=True, null=True)
    parent_organization = models.ForeignKey(
        'self', 
        on_delete=models.CASCADE, 
        null=True, 
        blank=True, 
        related_name='sub_organizations'
    )

    # specified for intellisense, defined in ProgrammingLanguages model
    programming_languages: models.Manager['ProgrammingLanguage']

    # autogenerated django integer choice string getter
    get_type_display: Callable[[], str]

    class Meta: ordering = ['name']
    def __str__(self): 
        if self.abbreviation:
            return f"{self.name} ({self.abbreviation})"
        return self.name
